// Generated by CoffeeScript 1.3.3

$(function() {
  var container, currentBackgroundPosition, demo, draggie, elem, image, img, initialInputs, mask, output, updateBackgroundPosition;
  img = new Image;
  image = $("#image");
  mask = $("#mask");
  container = $("#container");
  container.imagesLoaded(function() {
    var imageHeight, imageWidth, maskHeight, maskWidth, positionMask, setContainerDimensions, setMaskDimensions;
    imageWidth = image.width();
    imageHeight = image.height();
    maskWidth = image.width() / 2;
    console.log("maskWidth: " + maskWidth);
    maskHeight = image.height() / 2;
    console.log("maskHeight: " + maskHeight);
    setMaskDimensions = function() {
      return mask.css({
        "width": maskWidth,
        "height": maskHeight
      });
    };
    setMaskDimensions();
    setContainerDimensions = function() {
      return container.css({
        "width": imageWidth + (maskWidth * 1),
        "height": imageHeight + (maskHeight * 1)
      });
    };
    setContainerDimensions();
    positionMask = function() {
      return mask.css({
        "left": "50%",
        "top": "50%",
        "margin-left": -0.5 * maskWidth,
        "margin-top": -0.5 * maskHeight
      });
    };
    return positionMask();
  });
  updateBackgroundPosition = function(dragEvent, draggieInstance, event, pointer) {
    var position;
    position = draggieInstance.position;
    mask.css({
      "background-position": position.x + "px " + position.y + "px"
    });
    return currentBackgroundPosition();
  };
  demo = document.querySelector("#mask");
  elem = demo.querySelector("#image");
  draggie = new Draggabilly(elem, {
    containment: "#container"
  });
  output = demo.querySelector("code");
  draggie.on("dragStart", function(draggieInstance, event, pointer) {
    return updateBackgroundPosition("DRAG START", draggieInstance, event, pointer);
  });
  draggie.on("dragMove", function(draggieInstance, event, pointer) {
    return updateBackgroundPosition("DRAG MOVE", draggieInstance, event, pointer);
  });
  draggie.on("dragEnd", function(draggieInstance, event, pointer) {
    return updateBackgroundPosition("DRAG END", draggieInstance, event, pointer);
  });
  currentBackgroundPosition = function() {
    return $("#background-position").text("background-position: " + mask.css("background-position"));
  };
  $("#animate").click(function(e) {
    e.preventDefault();
    mask.toggleClass("animate");
    return image.toggleClass("hidden");
  });
  $("#start").click(function(e) {
    var anim, startPosition;
    e.preventDefault();
    startPosition = $("#mask").css("background-position");
    anim = CSSAnimations.get("ken-burns");
    anim.setKeyframe("0%", {
      "background-position": startPosition
    });
    return $("#start-value").text("0% {background-position: " + startPosition + "}");
  });
  $("#middle").click(function(e) {
    var anim, midPosition;
    e.preventDefault();
    midPosition = $("#mask").css("background-position");
    anim = CSSAnimations.get("ken-burns");
    anim.setKeyframe("50%", {
      "background-position": midPosition
    });
    return $("#middle-value").text("50% {background-position: " + midPosition + "}");
  });
  $("#end").click(function(e) {
    var anim, endPosition;
    e.preventDefault();
    endPosition = $("#mask").css("background-position");
    anim = CSSAnimations.get("ken-burns");
    anim.setKeyframe("100%", {
      "background-position": endPosition
    });
    return $("#end-value").text("100% {background-position: " + endPosition + "}");
  });
  initialInputs = function() {
    $("input[type='text']").each(function() {
      var prop, value;
      value = $(this).val();
      prop = $(this).data("property");
      return mask.css(prop, value);
    });
    return $("select").on("change", function() {
      var prop, value;
      value = $(this).val();
      prop = $(this).data("property");
      return mask.css(prop, value);
    });
  };
  initialInputs();
  $("input[type='text']").on("change", function() {
    var prop, value;
    value = $(this).val();
    prop = $(this).data("property");
    return mask.css(prop, value);
  });
  return $("select").on("change", function() {
    var prop, value;
    value = $(this).val();
    prop = $(this).data("property");
    return mask.css(prop, value);
  });
});
